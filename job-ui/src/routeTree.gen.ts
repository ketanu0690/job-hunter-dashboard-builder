/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotFoundRouteImport } from './routes/$notFound'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthBlogsRouteImport } from './routes/_auth/blogs'
import { Route as Auth_dashboardManageBlogRouteImport } from './routes/_auth/__dashboard/manageBlog'
import { Route as Auth_dashboardAdminRouteImport } from './routes/_auth/__dashboard/admin'

const NotFoundRoute = NotFoundRouteImport.update({
  id: '/$notFound',
  path: '/$notFound',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthBlogsRoute = AuthBlogsRouteImport.update({
  id: '/_auth/blogs',
  path: '/blogs',
  getParentRoute: () => rootRouteImport,
} as any)
const Auth_dashboardManageBlogRoute =
  Auth_dashboardManageBlogRouteImport.update({
    id: '/_auth/__dashboard/manageBlog',
    path: '/manageBlog',
    getParentRoute: () => rootRouteImport,
  } as any)
const Auth_dashboardAdminRoute = Auth_dashboardAdminRouteImport.update({
  id: '/_auth/__dashboard/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$notFound': typeof NotFoundRoute
  '/blogs': typeof AuthBlogsRoute
  '/login': typeof AuthLoginRoute
  '/admin': typeof Auth_dashboardAdminRoute
  '/manageBlog': typeof Auth_dashboardManageBlogRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$notFound': typeof NotFoundRoute
  '/blogs': typeof AuthBlogsRoute
  '/login': typeof AuthLoginRoute
  '/admin': typeof Auth_dashboardAdminRoute
  '/manageBlog': typeof Auth_dashboardManageBlogRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$notFound': typeof NotFoundRoute
  '/_auth/blogs': typeof AuthBlogsRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/__dashboard/admin': typeof Auth_dashboardAdminRoute
  '/_auth/__dashboard/manageBlog': typeof Auth_dashboardManageBlogRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$notFound' | '/blogs' | '/login' | '/admin' | '/manageBlog'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$notFound' | '/blogs' | '/login' | '/admin' | '/manageBlog'
  id:
    | '__root__'
    | '/'
    | '/$notFound'
    | '/_auth/blogs'
    | '/_auth/login'
    | '/_auth/__dashboard/admin'
    | '/_auth/__dashboard/manageBlog'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotFoundRoute: typeof NotFoundRoute
  AuthBlogsRoute: typeof AuthBlogsRoute
  AuthLoginRoute: typeof AuthLoginRoute
  Auth_dashboardAdminRoute: typeof Auth_dashboardAdminRoute
  Auth_dashboardManageBlogRoute: typeof Auth_dashboardManageBlogRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$notFound': {
      id: '/$notFound'
      path: '/$notFound'
      fullPath: '/$notFound'
      preLoaderRoute: typeof NotFoundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/blogs': {
      id: '/_auth/blogs'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof AuthBlogsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/__dashboard/manageBlog': {
      id: '/_auth/__dashboard/manageBlog'
      path: '/manageBlog'
      fullPath: '/manageBlog'
      preLoaderRoute: typeof Auth_dashboardManageBlogRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/__dashboard/admin': {
      id: '/_auth/__dashboard/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof Auth_dashboardAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotFoundRoute: NotFoundRoute,
  AuthBlogsRoute: AuthBlogsRoute,
  AuthLoginRoute: AuthLoginRoute,
  Auth_dashboardAdminRoute: Auth_dashboardAdminRoute,
  Auth_dashboardManageBlogRoute: Auth_dashboardManageBlogRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
